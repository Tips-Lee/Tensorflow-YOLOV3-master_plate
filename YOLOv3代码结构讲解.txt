一、训练数据构建
    参考"02_YOLO数据构建.py"和"./data/dataset/plate_train.txt"文件内容来理解，实际上就是将训练数据转换为txt文本文件的形式，一行一张图像，结构类似：
        image_path xmin,ymin,xmax,ymax,class xmin,ymin,xman,ymax,class --> 这个就是表示image_path这个对应的图像上存在两个边框，以及边框坐标和类别
    NOTE: 实际上图像大小是可以不一致的，因为在模型中会对数据进行转换的。
======================================================
二、构建class名称映射关系
    参考"./data/classes/plate.names"文件内容；一行一个类别的名称(行号从0开始，和数据中的label标签是对应的)
======================================================
三、代码解析
    core：主要功能代码所在的package
    evaluate.py：模型验证&预测的代码
    train.py：模型训练代码
    convert_weight.py：将ckpt模型进行转换操作的(要求tensorflow版本必须是1.11.x以上版本)
    freeze_graph.py：将ckpt模型文件转换为pb文件
======================================================
四、更改core中的config.py文件内容，让其运行我们的业务代码数据
    __C.YOLO.CLASSES = "./data/classes/voc.names" # 更改为具体的类别名称文本数据
    __C.TRAIN.ANNOT_PATH = "./data/dataset/voc_train.txt" # 更改为当前业务的训练数据
    __C.TEST.ANNOT_PATH = "./data/dataset/voc_test.txt" # 更改为当前业务的验证数据
======================================================
五、模型训练
    直接执行train.py即可
======================================================
六、预测
    修改配置文件：
        __C.TEST.ANNOT_PATH = "./data/dataset/voc_test.txt" # 更改为当前业务的验证数据
        __C.TEST.WEIGHT_FILE = "./checkpoint/yolov3_coco.ckpt" # 给定模型路径
    直接运行evaluate.py

======================================================
七、优化修改
    -1. 将所有图像通过透视变换，变成正向的图像；
    -2. 上采样的实现方式修改为最新的上采样方式
======================================================
八、扩展
    -1. 理解以下pb模型文件的生成以及构建方式